[{"id":"54557d61126a00423b000a45","name":"shorter concat [reverse longer]","slug":"shorter-concat-reverse-longer","category":"reference","publishedAt":"2014-11-02T11:33:35.383Z","approvedAt":"2014-11-19T01:29:50.460Z","languages":["java","haskell","python","clojure","javascript","csharp","ruby","coffeescript","crystal","julia","cobol","typescript"],"url":"https://www.codewars.com/kata/54557d61126a00423b000a45","rank":{"id":-7,"name":"7 kyu","color":"white"},"createdAt":"2014-11-02T00:40:01.498Z","createdBy":{"username":"knotman90","url":"https://www.codewars.com/users/knotman90"},"approvedBy":{"username":"jhoffner","url":"https://www.codewars.com/users/jhoffner"},"description":"Given 2 strings, `a` and `b`, return a string of the form: `shorter+reverse(longer)+shorter.`\n\n\nIn other words, the shortest string has to be put as prefix and as suffix of the reverse of the longest.\n\nStrings `a` and `b` may be empty, but not null (In C# strings may also be null. Treat them as if they are empty.).  \nIf `a` and `b` have the same length treat `a` as the longer producing `b+reverse(a)+b`","totalAttempts":33822,"totalCompleted":11681,"totalStars":97,"voteScore":912,"tags":["Strings","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":2,"suggestions":2},"language":"typescript","solution":"export function shorterReverseLonger(a: string, b: string): string {\n  if (a.length < b.length)\n    return `${a}${reverse(b)}${a}`\n  return `${b}${reverse(a)}${b}`\n}\n\nfunction reverse(word: string) {\n  return word.split('').reverse().join('')\n}","completedAt":"2025-01-07T08:59:51.572Z","completedLanguages":["typescript"]},{"id":"5259b20d6021e9e14c0010d4","name":"Reverse words","slug":"reverse-words","category":"reference","publishedAt":"2013-10-12T20:44:55.489Z","approvedAt":null,"languages":["javascript","python","haskell","csharp","ruby","java","typescript","rust","c","cpp","julia","php","go","cobol","scala","dart"],"url":"https://www.codewars.com/kata/5259b20d6021e9e14c0010d4","rank":{"id":-7,"name":"7 kyu","color":"white"},"createdAt":"2013-10-12T20:33:17.421Z","createdBy":{"username":"jnicol","url":"https://www.codewars.com/users/jnicol"},"description":"Complete the function that accepts a string parameter, and reverses each word in the string. **All** spaces in the string should be retained.\n\n## Examples\n```\n\"This is an example!\" ==> \"sihT si na !elpmaxe\"\n\"double  spaces\"      ==> \"elbuod  secaps\"\n```","totalAttempts":538410,"totalCompleted":147258,"totalStars":2367,"voteScore":8249,"tags":["Strings","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":2,"suggestions":4},"language":"typescript","solution":"export function reverseWords(str: string): string {\n  return str.split(\" \").map(reverseWord).join(\" \")\n}\n\nfunction reverseWord(str: string): string {\n  return str.split(\"\").reverse().join(\"\")\n}","completedAt":"2025-01-02T10:36:59.623Z","completedLanguages":["typescript"]},{"id":"514a6336889283a3d2000001","name":"JavaScript Array Filter","slug":"javascript-array-filter","category":"reference","publishedAt":"2013-04-02T16:41:47.785Z","approvedAt":null,"languages":["javascript","csharp","python","ruby","julia","cpp","typescript","r","coffeescript","crystal","c","cobol","haskell"],"url":"https://www.codewars.com/kata/514a6336889283a3d2000001","rank":{"id":-7,"name":"7 kyu","color":"white"},"createdAt":"2013-03-21T01:32:38.546Z","createdBy":{"username":"jhoffner","url":"https://www.codewars.com/users/jhoffner"},"description":"```if:javascript\nJavaScript Arrays support a filter function (starting in JavaScript 1.6). Use the filter functionality to complete the function given. \n```\n```if:csharp\nStarting with .NET Framework 3.5, C# supports a `Where` (in the `System.Linq` namespace) method which allows a user to filter arrays based on a predicate. Use the `Where` method to complete the function given.\n\n`Enumerable.Where` documentation:\nhttps://msdn.microsoft.com/en-us/library/bb534803(v=vs.110).aspx\n```\n\n```if:python\nIn Python, there is a built-in filter function that operates similarly to JS's filter. For more information on how to use this function, visit https://docs.python.org/3/library/functions.html#filter\n```\n\n```if:haskell\nGiven list of integers return even integers on that list.\n```\nThe solution would work like the following:\n```javascript\ngetEvenNumbers([2,4,5,6]) // should == [2,4,6]\n```\n\n```csharp\nKata.GetEvenNumbers(new int[] {2, 4, 5, 6}) => new int[] {2, 4, 6}\n```\n\n```crystal\nget_even_numbers([2,4,5,6]) => [2,4,6]\n```\n\n```r\nget_even_numbers(c(2,4,5,6)) => c(2,4,6)\n```\n\n```julia\ngetevennumbers([2,4,5,6]) => [2,4,6]\n```\n\n```coffeescript\ngetEvenNumbers([2,4,5,6]) => [2,4,6]\n```\n\n```python\nget_even_numbers([2,4,5,6]) => [2,4,6]\n```\n\n```ruby\nget_even_numbers([2,4,5,6]) => [2,4,6]\n```\n\n```cpp\nget_even_numbers({2,4,5,6}) => {2,4,6}\n```\n\n```haskell\ngetEvenNumbers [2,4,5,6] => [2,4,6]\n```","totalAttempts":56768,"totalCompleted":28001,"totalStars":134,"voteScore":2183,"tags":["Arrays","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":0,"suggestions":2},"language":"typescript","solution":"export const getEvenNumbers = (numbersArray : number[]) : number[] => {\n  return numbersArray.filter(n => n % 2 === 0);\n}","completedAt":"2025-01-02T10:30:17.014Z","completedLanguages":["typescript"]},{"id":"54e6533c92449cc251001667","name":"Unique In Order","slug":"unique-in-order","category":"reference","publishedAt":"2015-02-19T21:46:17.357Z","approvedAt":"2015-05-08T18:36:18.658Z","languages":["python","ruby","javascript","csharp","php","clojure","haskell","crystal","rust","cpp","scala","bf","typescript","coffeescript"],"url":"https://www.codewars.com/kata/54e6533c92449cc251001667","rank":{"id":-6,"name":"6 kyu","color":"yellow"},"createdAt":"2015-02-19T21:18:52.456Z","createdBy":{"username":"pinelopi","url":"https://www.codewars.com/users/pinelopi"},"approvedBy":{"username":"jhoffner","url":"https://www.codewars.com/users/jhoffner"},"description":"Implement the function unique_in_order which takes as argument a sequence and returns a list of items without any elements with the same value next to each other and preserving the original order of elements.\n\nFor example:\n\n```cpp\nuniqueInOrder(\"AAAABBBCCDAABBB\") == {'A', 'B', 'C', 'D', 'A', 'B'}\nuniqueInOrder(\"ABBCcAD\")         == {'A', 'B', 'C', 'c', 'A', 'D'}\nuniqueInOrder([1,2,2,3,3])       == {1,2,3}\n```\n```javascript\nuniqueInOrder('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']\nuniqueInOrder('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']\nuniqueInOrder([1,2,2,3,3])       == [1,2,3]\n```\n```typescript\nuniqueInOrder('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']\nuniqueInOrder('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']\nuniqueInOrder([1,2,2,3,3])       == [1,2,3]\n```\n```python\nunique_in_order('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']\nunique_in_order('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']\nunique_in_order([1, 2, 2, 3, 3])   == [1, 2, 3]\nunique_in_order((1, 2, 2, 3, 3))   == [1, 2, 3]\n```\n```ruby\nunique_in_order('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']\nunique_in_order('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']\nunique_in_order([1,2,2,3,3])       == [1,2,3]\n```\n```haskell\nuniqueInOrder \"AAAABBBCCDAABBB\" == \"ABCDAB\"\nuniqueInOrder \"ABBCcAD\"         == \"ABCcAD\"\nuniqueInOrder [1,2,2,3,3]       == [1,2,3]\n```\n```crystal\nunique_in_order(\"AAAABBBCCDAABBB\") == ['A', 'B', 'C', 'D', 'A', 'B']\nunique_in_order(\"ABBCcAD\")         == ['A', 'B', 'C', 'c', 'A', 'D']\nunique_in_order([1,2,2,3,3])       == [1,2,3]\n```\n```scala\nuniqueInOrder(\"AAAABBBCCDAABBB\")   == List('A', 'B', 'C', 'D', 'A', 'B')\nuniqueInOrder(\"ABBCcAD\")           == List('A', 'B', 'C', 'c', 'A', 'D')\nuniqueInOrder(List(1, 2, 2, 3, 3)) == List(1, 2, 3)\n```\n","totalAttempts":857121,"totalCompleted":186919,"totalStars":3182,"voteScore":11544,"tags":["Algorithms","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":10,"suggestions":13},"language":"typescript","solution":"export function uniqueInOrder (iterable: string | (string | number)[]):(string | number)[] {\n  return [...iterable].reduce((acc: (string | number)[], val: (string | number)) => {\n    if (acc[acc.length - 1] !== val) {\n      return [...acc, val]\n    }\n    return acc\n  }, [])\n};\n","completedAt":"2024-11-21T11:09:20.871Z","completedLanguages":["typescript"]},{"id":"54fe05c4762e2e3047000add","name":"OOP: Object Oriented Piracy ","slug":"oop-object-oriented-piracy","category":"reference","publishedAt":"2015-03-09T21:55:36.128Z","approvedAt":"2015-03-17T14:34:31.461Z","languages":["javascript","python","ruby","csharp","rust","java"],"url":"https://www.codewars.com/kata/54fe05c4762e2e3047000add","rank":{"id":-8,"name":"8 kyu","color":"white"},"createdAt":"2015-03-09T20:42:44.845Z","createdBy":{"username":"By-The-Ocean","url":"https://www.codewars.com/users/By-The-Ocean"},"approvedBy":{"username":"jhoffner","url":"https://www.codewars.com/users/jhoffner"},"description":"Ahoy matey!\n\nYou are a leader of a small pirate crew. And you have a plan.\nWith the help of OOP you wish to make a pretty efficient system to identify ships with heavy booty on board!\n\nUnfortunately for you, people weigh a lot these days, so how do you know if a ship is full of gold and not people?\n\nYou begin with writing a generic Ship class / struct:\n```javascript\nclass Ship {\n  constructor(draft, crew) {\n    this.draft = draft\n    this.crew = crew\n  }\n}\n```\n```python\nclass Ship:\n    def __init__(self, draft, crew):\n        self.draft = draft\n        self.crew = crew\n```\n```csharp\npublic class Ship\n{\n  public int Draft;\n  public int Crew;\n  \n  public Ship(int draft, int crew)\n  {\n    Draft = draft;\n    Crew = crew;\n  }\n}\n```\n```rust\nstruct Ship {\n  draft: u32,\n  crew: u32,\n}\n```\n```java\npublic class Ship {\n    private final double draft;\n    private final int crew;\n    \n    public Ship(double draft, int crew) {\n        this.draft = draft;\n        this.crew = crew;\n    }\n} \n```\n```ruby\nclass Ship\n  def initialize(draft,crew)\n    @draft=draft\n    @crew=crew\n  end\nend\n```\n\nEvery time your spies see a new ship enter the dock, they will create a new ship object based on their observations:\n\n* draft - an estimate of the ship's weight based on how low it is in the water\n* crew - the count of crew on board\n\n```javascript\nconst titanic = new Ship(15, 10);\n```\n```python\nTitanic = Ship(15, 10)\n```\n```csharp\nShip titanic = new Ship(15, 10);\n```\n```rust\n  let titanic = Ship {\n      draft : 15,\n      crew : 10,\n  };\n```\n```java\nShip titanic = new Ship(15, 10);\n```\n```ruby\ntitanic = Ship.new(15, 10)\n```\n\n## Task\nYou have access to the ship \"draft\" and \"crew\". \"Draft\" is the total ship weight and \"crew\" is the number of humans on the ship.\n\nEach crew member adds `1.5` units to the ship draft. If after removing the weight of the crew, the draft is still more than `20`, then the ship is worth looting. Any ship weighing that much must have a lot of booty!\n\nAdd the method\n```javascript\nisWorthIt\n``` \n```python\nis_worth_it\n``` \n```rust\nis_worth_it(&self)\n``` \n```csharp\nIsWorthIt\n```\n```java\nisWorthIt\n```\n```ruby\nis_worth_it\n```\n\nto decide if the ship is worthy to loot. For example:\n\n```javascript\ntitanic.isWorthIt() // return false\n```\n```python\nTitanic.is_worth_it()\nFalse\n```\n```csharp\ntitanic.IsWorthIt() => false\n```\n```rust\ntitanic.is_worth_it() -> false\n```\n```java\ntitanic.isWorthIt() == false\n```\n```ruby\ntitanic.is_worth_it() # false\n```\n\nGood luck and may you find GOOOLD!\n","totalAttempts":75057,"totalCompleted":20658,"totalStars":329,"voteScore":1631,"tags":["Object-oriented Programming","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":1,"suggestions":1},"language":"python","solution":"class Ship:\n    def __init__(self, draft, crew):\n        self.draft = draft\n        self.crew = crew\n    \n    def is_worth_it(self):\n        if self.draft - self.crew * 1.5 > 20:\n            return True\n        return False","completedAt":"2024-09-30T13:29:49.585Z","completedLanguages":["python"]}]