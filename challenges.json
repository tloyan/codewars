[{"id":"54557d61126a00423b000a45","name":"shorter concat [reverse longer]","slug":"shorter-concat-reverse-longer","category":"reference","publishedAt":"2014-11-02T11:33:35.383Z","approvedAt":"2014-11-19T01:29:50.460Z","languages":["java","haskell","python","clojure","javascript","csharp","ruby","coffeescript","crystal","julia","cobol","typescript"],"url":"https://www.codewars.com/kata/54557d61126a00423b000a45","rank":{"id":-7,"name":"7 kyu","color":"white"},"createdAt":"2014-11-02T00:40:01.498Z","createdBy":{"username":"knotman90","url":"https://www.codewars.com/users/knotman90"},"approvedBy":{"username":"jhoffner","url":"https://www.codewars.com/users/jhoffner"},"description":"Given 2 strings, `a` and `b`, return a string of the form: `shorter+reverse(longer)+shorter.`\n\n\nIn other words, the shortest string has to be put as prefix and as suffix of the reverse of the longest.\n\nStrings `a` and `b` may be empty, but not null (In C# strings may also be null. Treat them as if they are empty.).  \nIf `a` and `b` have the same length treat `a` as the longer producing `b+reverse(a)+b`","totalAttempts":33822,"totalCompleted":11681,"totalStars":97,"voteScore":912,"tags":["Strings","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":2,"suggestions":2},"language":"typescript","solution":"export function shorterReverseLonger(a: string, b: string): string {\n  if (a.length < b.length)\n    return `${a}${reverse(b)}${a}`\n  return `${b}${reverse(a)}${b}`\n}\n\nfunction reverse(word: string) {\n  return word.split('').reverse().join('')\n}","completedAt":"2025-01-07T08:59:51.572Z","completedLanguages":["typescript"]},{"id":"5259b20d6021e9e14c0010d4","name":"Reverse words","slug":"reverse-words","category":"reference","publishedAt":"2013-10-12T20:44:55.489Z","approvedAt":null,"languages":["javascript","python","haskell","csharp","ruby","java","typescript","rust","c","cpp","julia","php","go","cobol","scala","dart"],"url":"https://www.codewars.com/kata/5259b20d6021e9e14c0010d4","rank":{"id":-7,"name":"7 kyu","color":"white"},"createdAt":"2013-10-12T20:33:17.421Z","createdBy":{"username":"jnicol","url":"https://www.codewars.com/users/jnicol"},"description":"Complete the function that accepts a string parameter, and reverses each word in the string. **All** spaces in the string should be retained.\n\n## Examples\n```\n\"This is an example!\" ==> \"sihT si na !elpmaxe\"\n\"double  spaces\"      ==> \"elbuod  secaps\"\n```","totalAttempts":538410,"totalCompleted":147258,"totalStars":2367,"voteScore":8249,"tags":["Strings","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":2,"suggestions":4},"language":"typescript","solution":"export function reverseWords(str: string): string {\n  return str.split(\" \").map(reverseWord).join(\" \")\n}\n\nfunction reverseWord(str: string): string {\n  return str.split(\"\").reverse().join(\"\")\n}","completedAt":"2025-01-02T10:36:59.623Z","completedLanguages":["typescript"]},{"id":"514a6336889283a3d2000001","name":"JavaScript Array Filter","slug":"javascript-array-filter","category":"reference","publishedAt":"2013-04-02T16:41:47.785Z","approvedAt":null,"languages":["javascript","csharp","python","ruby","julia","cpp","typescript","r","coffeescript","crystal","c","cobol","haskell"],"url":"https://www.codewars.com/kata/514a6336889283a3d2000001","rank":{"id":-7,"name":"7 kyu","color":"white"},"createdAt":"2013-03-21T01:32:38.546Z","createdBy":{"username":"jhoffner","url":"https://www.codewars.com/users/jhoffner"},"description":"```if:javascript\nJavaScript Arrays support a filter function (starting in JavaScript 1.6). Use the filter functionality to complete the function given. \n```\n```if:csharp\nStarting with .NET Framework 3.5, C# supports a `Where` (in the `System.Linq` namespace) method which allows a user to filter arrays based on a predicate. Use the `Where` method to complete the function given.\n\n`Enumerable.Where` documentation:\nhttps://msdn.microsoft.com/en-us/library/bb534803(v=vs.110).aspx\n```\n\n```if:python\nIn Python, there is a built-in filter function that operates similarly to JS's filter. For more information on how to use this function, visit https://docs.python.org/3/library/functions.html#filter\n```\n\n```if:haskell\nGiven list of integers return even integers on that list.\n```\nThe solution would work like the following:\n```javascript\ngetEvenNumbers([2,4,5,6]) // should == [2,4,6]\n```\n\n```csharp\nKata.GetEvenNumbers(new int[] {2, 4, 5, 6}) => new int[] {2, 4, 6}\n```\n\n```crystal\nget_even_numbers([2,4,5,6]) => [2,4,6]\n```\n\n```r\nget_even_numbers(c(2,4,5,6)) => c(2,4,6)\n```\n\n```julia\ngetevennumbers([2,4,5,6]) => [2,4,6]\n```\n\n```coffeescript\ngetEvenNumbers([2,4,5,6]) => [2,4,6]\n```\n\n```python\nget_even_numbers([2,4,5,6]) => [2,4,6]\n```\n\n```ruby\nget_even_numbers([2,4,5,6]) => [2,4,6]\n```\n\n```cpp\nget_even_numbers({2,4,5,6}) => {2,4,6}\n```\n\n```haskell\ngetEvenNumbers [2,4,5,6] => [2,4,6]\n```","totalAttempts":56768,"totalCompleted":28001,"totalStars":134,"voteScore":2183,"tags":["Arrays","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":0,"suggestions":2},"language":"typescript","solution":"export const getEvenNumbers = (numbersArray : number[]) : number[] => {\n  return numbersArray.filter(n => n % 2 === 0);\n}","completedAt":"2025-01-02T10:30:17.014Z","completedLanguages":["typescript"]},{"id":"54e6533c92449cc251001667","name":"Unique In Order","slug":"unique-in-order","category":"reference","publishedAt":"2015-02-19T21:46:17.357Z","approvedAt":"2015-05-08T18:36:18.658Z","languages":["python","ruby","javascript","csharp","php","clojure","haskell","crystal","rust","cpp","scala","bf","typescript","coffeescript"],"url":"https://www.codewars.com/kata/54e6533c92449cc251001667","rank":{"id":-6,"name":"6 kyu","color":"yellow"},"createdAt":"2015-02-19T21:18:52.456Z","createdBy":{"username":"pinelopi","url":"https://www.codewars.com/users/pinelopi"},"approvedBy":{"username":"jhoffner","url":"https://www.codewars.com/users/jhoffner"},"description":"Implement the function unique_in_order which takes as argument a sequence and returns a list of items without any elements with the same value next to each other and preserving the original order of elements.\n\nFor example:\n\n```cpp\nuniqueInOrder(\"AAAABBBCCDAABBB\") == {'A', 'B', 'C', 'D', 'A', 'B'}\nuniqueInOrder(\"ABBCcAD\")         == {'A', 'B', 'C', 'c', 'A', 'D'}\nuniqueInOrder([1,2,2,3,3])       == {1,2,3}\n```\n```javascript\nuniqueInOrder('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']\nuniqueInOrder('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']\nuniqueInOrder([1,2,2,3,3])       == [1,2,3]\n```\n```typescript\nuniqueInOrder('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']\nuniqueInOrder('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']\nuniqueInOrder([1,2,2,3,3])       == [1,2,3]\n```\n```python\nunique_in_order('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']\nunique_in_order('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']\nunique_in_order([1, 2, 2, 3, 3])   == [1, 2, 3]\nunique_in_order((1, 2, 2, 3, 3))   == [1, 2, 3]\n```\n```ruby\nunique_in_order('AAAABBBCCDAABBB') == ['A', 'B', 'C', 'D', 'A', 'B']\nunique_in_order('ABBCcAD')         == ['A', 'B', 'C', 'c', 'A', 'D']\nunique_in_order([1,2,2,3,3])       == [1,2,3]\n```\n```haskell\nuniqueInOrder \"AAAABBBCCDAABBB\" == \"ABCDAB\"\nuniqueInOrder \"ABBCcAD\"         == \"ABCcAD\"\nuniqueInOrder [1,2,2,3,3]       == [1,2,3]\n```\n```crystal\nunique_in_order(\"AAAABBBCCDAABBB\") == ['A', 'B', 'C', 'D', 'A', 'B']\nunique_in_order(\"ABBCcAD\")         == ['A', 'B', 'C', 'c', 'A', 'D']\nunique_in_order([1,2,2,3,3])       == [1,2,3]\n```\n```scala\nuniqueInOrder(\"AAAABBBCCDAABBB\")   == List('A', 'B', 'C', 'D', 'A', 'B')\nuniqueInOrder(\"ABBCcAD\")           == List('A', 'B', 'C', 'c', 'A', 'D')\nuniqueInOrder(List(1, 2, 2, 3, 3)) == List(1, 2, 3)\n```\n","totalAttempts":857121,"totalCompleted":186919,"totalStars":3182,"voteScore":11544,"tags":["Algorithms","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":10,"suggestions":13},"language":"typescript","solution":"export function uniqueInOrder (iterable: string | (string | number)[]):(string | number)[] {\n  return [...iterable].reduce((acc: (string | number)[], val: (string | number)) => {\n    if (acc[acc.length - 1] !== val) {\n      return [...acc, val]\n    }\n    return acc\n  }, [])\n};\n","completedAt":"2024-11-21T11:09:20.871Z","completedLanguages":["typescript"]},{"id":"54fe05c4762e2e3047000add","name":"OOP: Object Oriented Piracy ","slug":"oop-object-oriented-piracy","category":"reference","publishedAt":"2015-03-09T21:55:36.128Z","approvedAt":"2015-03-17T14:34:31.461Z","languages":["javascript","python","ruby","csharp","rust","java"],"url":"https://www.codewars.com/kata/54fe05c4762e2e3047000add","rank":{"id":-8,"name":"8 kyu","color":"white"},"createdAt":"2015-03-09T20:42:44.845Z","createdBy":{"username":"By-The-Ocean","url":"https://www.codewars.com/users/By-The-Ocean"},"approvedBy":{"username":"jhoffner","url":"https://www.codewars.com/users/jhoffner"},"description":"Ahoy matey!\n\nYou are a leader of a small pirate crew. And you have a plan.\nWith the help of OOP you wish to make a pretty efficient system to identify ships with heavy booty on board!\n\nUnfortunately for you, people weigh a lot these days, so how do you know if a ship is full of gold and not people?\n\nYou begin with writing a generic Ship class / struct:\n```javascript\nclass Ship {\n  constructor(draft, crew) {\n    this.draft = draft\n    this.crew = crew\n  }\n}\n```\n```python\nclass Ship:\n    def __init__(self, draft, crew):\n        self.draft = draft\n        self.crew = crew\n```\n```csharp\npublic class Ship\n{\n  public int Draft;\n  public int Crew;\n  \n  public Ship(int draft, int crew)\n  {\n    Draft = draft;\n    Crew = crew;\n  }\n}\n```\n```rust\nstruct Ship {\n  draft: u32,\n  crew: u32,\n}\n```\n```java\npublic class Ship {\n    private final double draft;\n    private final int crew;\n    \n    public Ship(double draft, int crew) {\n        this.draft = draft;\n        this.crew = crew;\n    }\n} \n```\n```ruby\nclass Ship\n  def initialize(draft,crew)\n    @draft=draft\n    @crew=crew\n  end\nend\n```\n\nEvery time your spies see a new ship enter the dock, they will create a new ship object based on their observations:\n\n* draft - an estimate of the ship's weight based on how low it is in the water\n* crew - the count of crew on board\n\n```javascript\nconst titanic = new Ship(15, 10);\n```\n```python\nTitanic = Ship(15, 10)\n```\n```csharp\nShip titanic = new Ship(15, 10);\n```\n```rust\n  let titanic = Ship {\n      draft : 15,\n      crew : 10,\n  };\n```\n```java\nShip titanic = new Ship(15, 10);\n```\n```ruby\ntitanic = Ship.new(15, 10)\n```\n\n## Task\nYou have access to the ship \"draft\" and \"crew\". \"Draft\" is the total ship weight and \"crew\" is the number of humans on the ship.\n\nEach crew member adds `1.5` units to the ship draft. If after removing the weight of the crew, the draft is still more than `20`, then the ship is worth looting. Any ship weighing that much must have a lot of booty!\n\nAdd the method\n```javascript\nisWorthIt\n``` \n```python\nis_worth_it\n``` \n```rust\nis_worth_it(&self)\n``` \n```csharp\nIsWorthIt\n```\n```java\nisWorthIt\n```\n```ruby\nis_worth_it\n```\n\nto decide if the ship is worthy to loot. For example:\n\n```javascript\ntitanic.isWorthIt() // return false\n```\n```python\nTitanic.is_worth_it()\nFalse\n```\n```csharp\ntitanic.IsWorthIt() => false\n```\n```rust\ntitanic.is_worth_it() -> false\n```\n```java\ntitanic.isWorthIt() == false\n```\n```ruby\ntitanic.is_worth_it() # false\n```\n\nGood luck and may you find GOOOLD!\n","totalAttempts":75057,"totalCompleted":20658,"totalStars":329,"voteScore":1631,"tags":["Object-oriented Programming","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":1,"suggestions":1},"language":"python","solution":"class Ship:\n    def __init__(self, draft, crew):\n        self.draft = draft\n        self.crew = crew\n    \n    def is_worth_it(self):\n        if self.draft - self.crew * 1.5 > 20:\n            return True\n        return False","completedAt":"2024-09-30T13:29:49.585Z","completedLanguages":["python"]},{"id":"5c0ae69d5f72394e130025f6","name":"SQL easy regex extraction","slug":"sql-easy-regex-extraction","category":"reference","publishedAt":"2018-12-07T21:31:09.487Z","approvedAt":"2019-02-21T19:28:16.947Z","languages":["sql"],"url":"https://www.codewars.com/kata/5c0ae69d5f72394e130025f6","rank":{"id":-7,"name":"7 kyu","color":"white"},"createdAt":"2018-12-07T21:31:44.396Z","createdBy":{"username":"Javatlacati","url":"https://www.codewars.com/users/Javatlacati"},"approvedBy":{"username":"FArekkusu","url":"https://www.codewars.com/users/FArekkusu"},"description":"Input\n---\n\nYou'll have a table like the following:\n\n| name           | greeting                                     |\n|----------------|----------------------------------------------|\n| Austin Gaylord | Hola que tal #4702665                        |\n| Kacie Zulauf   | Bienvenido 45454545 tal #470815 BD. WA470815 |\n\nOutput\n---\n\nIn this practice you'll need to extract from the greeting column the number preceeded by the `#` symbol and place it in a new column named `user_id`.\n\n| name           | greeting                                     | user_id |\n|----------------|----------------------------------------------|---------|\n| Austin Gaylord | Hola que tal #4702665                        | 4702665 |\n| Kacie Zulauf   | Bienvenido 45454545 tal #470815 BD. WA470815 | 470815  |\n\n**NOTE**: To keep it simple assume that the iser_id will be having varchar type\n\n\n\n\n","totalAttempts":18735,"totalCompleted":2781,"totalStars":91,"voteScore":277,"tags":["Regular Expressions","Fundamentals","Data Science"],"contributorsWanted":true,"unresolved":{"issues":0,"suggestions":1},"language":"sql","solution":"-- ALTER TABLE greetings\n-- ADD user_id VARCHAR(255);\n\n-- UPDATE greetings SET user_id = SUBSTRING(greeting FROM '#(\\d+)');\n\nSELECT name, greeting, SUBSTRING(greeting FROM '#(\\d+)') AS user_id\nFROM greetings;","completedAt":"2024-08-22T08:07:19.302Z","completedLanguages":["sql"]},{"id":"5a03b3f6a1c9040084001765","name":"Sum of angles","slug":"sum-of-angles","category":"reference","publishedAt":"2017-11-09T01:48:38.732Z","approvedAt":"2017-12-21T06:19:14.658Z","languages":["javascript","ruby","crystal","python","cpp","haskell","csharp","rust","java","nasm","fortran","c","scala","groovy","cfml","prolog","clojure","coffeescript","dart","elixir","elm","erlang","factor","fsharp","go","julia","kotlin","lua","nim","ocaml","php","powershell","purescript","r","racket","reason","shell","solidity","sql","swift","typescript","vb","objc","forth","cobol"],"url":"https://www.codewars.com/kata/5a03b3f6a1c9040084001765","rank":{"id":-7,"name":"7 kyu","color":"white"},"createdAt":"2017-11-09T01:48:45.963Z","createdBy":{"username":"DemonKing","url":"https://www.codewars.com/users/DemonKing"},"approvedBy":{"username":"GiacomoSorbi","url":"https://www.codewars.com/users/GiacomoSorbi"},"description":"Find the total sum of internal angles (in degrees) in an n-sided simple polygon. N will be greater than 2.","totalAttempts":66435,"totalCompleted":35398,"totalStars":185,"voteScore":2138,"tags":["Geometry","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":2,"suggestions":1},"language":"typescript","solution":"export function angle(n: number): number {\n  return (n - 2) * 180;\n}","completedAt":"2023-06-06T08:42:52.590Z","completedLanguages":["typescript"]},{"id":"59d9ff9f7905dfeed50000b0","name":"Alphabet symmetry","slug":"alphabet-symmetry","category":"reference","publishedAt":"2017-10-08T15:03:39.892Z","approvedAt":"2017-10-09T10:50:04.052Z","languages":["python","javascript","lua","csharp","ruby","haskell","crystal","cpp","fortran","coffeescript","dart","php","typescript","go","java","rust","prolog","clojure","julia","nim","c","cobol"],"url":"https://www.codewars.com/kata/59d9ff9f7905dfeed50000b0","rank":{"id":-7,"name":"7 kyu","color":"white"},"createdAt":"2017-10-08T10:36:15.471Z","createdBy":{"username":"KenKamau","url":"https://www.codewars.com/users/KenKamau"},"approvedBy":{"username":"arhigod","url":"https://www.codewars.com/users/arhigod"},"description":"Consider the word `\"abode\"`. We can see that the letter `a` is in position `1` and `b` is in position `2`. In the alphabet, `a` and `b` are also in positions `1` and `2`. Notice also that `d` and `e` in `abode` occupy the positions they would occupy in the alphabet, which are positions `4` and `5`. \n\nGiven an array of words, return an array of the number of letters that occupy their positions in the alphabet for each word. For example,\n```\nsolve([\"abode\",\"ABc\",\"xyzD\"]) = [4, 3, 1]\n```\nSee test cases for more examples.\n\nInput will consist of alphabet characters, both uppercase and lowercase. No spaces.\n\nGood luck!\n\nIf you like this Kata, please try: \n\n[Last digit symmetry](https://www.codewars.com/kata/59a9466f589d2af4c50001d8)\n\n[Alternate capitalization](https://www.codewars.com/kata/59cfc000aeb2844d16000075)\n\n~~~if:fortran\n## Fortran-Specific Notes\n\nDue to how strings and arrays work in Fortran, some of the strings in the input array will inevitably contain trailing whitespace.  **For this reason, please [trim](https://gcc.gnu.org/onlinedocs/gcc-4.3.4/gfortran/TRIM.html) your input strings before processing them.**\n~~~","totalAttempts":43121,"totalCompleted":14600,"totalStars":291,"voteScore":1607,"tags":["Strings","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":0,"suggestions":0},"language":"typescript","solution":"export function solve(arr: string[]) {\n  return arr.map((str: string): number => {\n    return str.split('').reduce((acc: number, val: string, index: number) => {\n      if (val.match(/[a-z]/i) && (val.charCodeAt(0) - 96) == index + 1) return acc + 1;\n      if (val.match(/[A-Z]/i) && (val.charCodeAt(0) - 64) == index + 1) return acc + 1;\n      return acc;\n    }, 0);\n  });\n}","completedAt":"2023-06-06T08:38:34.666Z","completedLanguages":["typescript"]},{"id":"554e4a2f232cdd87d9000038","name":"Complementary DNA","slug":"complementary-dna","category":"reference","publishedAt":"2015-05-09T18:11:08.627Z","approvedAt":"2015-05-13T23:02:02.947Z","languages":["python","javascript","ruby","coffeescript","java","haskell","cpp","csharp","crystal","php","shell","rust","typescript","clojure","c","go","nasm","kotlin","julia","prolog","elixir","r","scala","cobol","d","sql","lua"],"url":"https://www.codewars.com/kata/554e4a2f232cdd87d9000038","rank":{"id":-7,"name":"7 kyu","color":"white"},"createdAt":"2015-05-09T17:55:59.740Z","createdBy":{"username":"JustyFY","url":"https://www.codewars.com/users/JustyFY"},"approvedBy":{"username":"jhoffner","url":"https://www.codewars.com/users/jhoffner"},"description":"Deoxyribonucleic acid (DNA) is a chemical found in the nucleus of cells and carries the \"instructions\" for the development and functioning of living organisms.\n\nIf you want to know more: http://en.wikipedia.org/wiki/DNA\n\nIn DNA strings, symbols \"A\" and \"T\" are complements of each other, as \"C\" and \"G\". \nYour function receives one side of the DNA (string, except for Haskell); you need to return the other complementary side. DNA strand is never empty or there is no DNA at all (again, except for Haskell).\n\nMore similar exercise are found here: http://rosalind.info/problems/list-view/ (source)\n\nExample: (**input --> output**)\n~~~if-not:haskell\n```\n\"ATTGC\" --> \"TAACG\"\n\"GTAT\" --> \"CATA\"\n```\n~~~\n```if:haskell\ndnaStrand []        `shouldBe` []\ndnaStrand [A,T,G,C] `shouldBe` [T,A,C,G]\ndnaStrand [G,T,A,T] `shouldBe` [C,A,T,A]\ndnaStrand [A,A,A,A] `shouldBe` [T,T,T,T]\n```\n","totalAttempts":523680,"totalCompleted":226629,"totalStars":2517,"voteScore":14414,"tags":["Strings","Fundamentals"],"contributorsWanted":true,"unresolved":{"issues":2,"suggestions":2},"language":"typescript","solution":"const dnaChart: Record<string, string> = {\n  \"A\": \"T\",\n  \"T\": \"A\",\n  \"G\": \"C\",\n  \"C\": \"G\"\n}\n\nexport class Kata {\n  static dnaStrand(dna: string) {\n    return dna.split('').reduce((acc: string[], val: string) => {\n      return [...acc, dnaChart[val]];\n    }, []).join('');\n  }\n}","completedAt":"2023-06-06T08:14:03.266Z","completedLanguages":["typescript"]}]